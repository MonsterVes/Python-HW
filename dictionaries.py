# ---------------------------------------------------------------------------- #
#                            Задачи върху речници                              #
# ---------------------------------------------------------------------------- #

# --------------------------------- Задача 1. -------------------------------- #
# Напишете програма, която чете двойки ключ-стойност въведени от потребителя и ги
# съхранява в речник. Програмата трябва да продължи да чете стойности, докато
# потребителят не въведе празен ред за ключа. След това тя трябва да покаже всички
# ключове и стойности в речника, сортирани по ключ.

# Пример:
#     вход: име-Иван, възраст-25, град-София
#     изход: възраст-25, град-София, име-Иван

# YOUR CODE HERE

# info_dict = {}

# while True:
#     user_info = input("Enter info: ").split("-")
#     if user_info[0] != "":
#         info_dict[user_info[0]] = user_info[1]
#     else:   
#         break
# print(", ".join(f"{key}-{value}" for key, value in sorted(info_dict.items())))


# --------------------------------- Задача 2. -------------------------------- #
# Да се създаде програма, която чете думи като вход от клавиатурата, докато
# потребителят не въведе празен ред. Програмата трябва да преброи колко пъти
# всяка дума се среща във въведения текст и да изведе резултатите.
# Пример:
#   вход: ябълка, банан, ябълка, портокал, банан, ябълка
#   изход: ябълка: 3, банан: 2, портокал: 1

# YOUR CODE HERE

# list_of_words = []

# while True:
#     user_input = input("Enter a word: ")
#     if user_input != "":
#         list_of_words.append(user_input)
#     else:
#         break
# count_of_words = {word:list_of_words.count(word) for word in list_of_words}
# print(", ".join(f"{k}: {v}" for k, v in count_of_words.items()))



# --------------------------------- Задача 3. -------------------------------- #
# Да се създаде програма, която да прочита данни за студенти под формата
# "име оценка" от потребителя, докато не бъде въведен празен ред. Програмата
# трябва да съхранява средната оценка за всеки студент (някои студенти може
# да имат повече от една оценка) и накрая да извежда име и средна оценка
# за всеки студент сортирани по име.
# Пример:
#   вход: Иван 5, Петър 4, Иван 6, Мария 5, Петър 5
#   изход: Иван: 5.5, Мария: 5.0, Петър: 4.5

# YOUR CODE HERE


# --------------------------------- Задача 4. -------------------------------- #
# Напишете програма на Python, която създава телефонен указател, позволяващ
# на потребителя да добавя, търси, променя и изтрива записи. Всеки запис
# трябва да съдържа име и телефонен номер. Програмата трябва да предлага меню
# с опции: 1-Добави, 2-Търси, 3-Промени, 4-Изтрий, 5-Покажи всички, 0-Изход.
# Пример:
#   - Добави: "Иван", "0888123456" => Записът е добавен
#   - Търси: "Иван" => "0888123456"
#   - Промени: "Иван", "0888999999" => Записът е променен
#   - Изтрий: "Иван" => Записът е изтрит

# YOUR CODE HERE


